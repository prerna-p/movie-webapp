{"version":3,"sources":["serviceWorker.js","services/user.service.client.js","components/LoginComponent.js","services/MovieService.js","components/MovieCard.js","components/NowPlayingListItem.js","containers/NowPlayingList.js","services/mapi.service.client.js","components/Search.js","containers/Home.js","components/UserHomeNavbar.js","components/UserHomeMovieCards.js","components/UserListCards.js","services/movie.service.client.js","containers/UserHomeContainer.js","components/ProfileLinksComponent.js","containers/UserProfile.js","components/CriticHomeMovieCards.js","components/CriticListCards.js","containers/CriticHomeContainer.js","services/admin.service.client.js","containers/RegisterUserContainer.js","containers/AdminContainer.js","components/SearchResultsPage.js","services/critic.service.client.js","containers/CriticReviewContainer.js","components/CriticReviewListItem.js","components/CriticReview.js","components/DetailsPage.js","components/ReviewsByCritic.js","containers/ExploreMoviesContainer.js","services/fan.service.client.js","containers/FanExploreContainer.js","components/UserPublicProfile.js","components/Favorites.js","components/WatchlistPage.js","app.js","index.js"],"names":["Boolean","window","location","hostname","match","_singleton","Symbol","heroku","UserServiceClient","singletonToken","Object","classCallCheck","this","Error","fetch","credentials","username","password","user","method","headers","Content-type","body","JSON","stringify","newuser","then","response","json","userId","LoginComponent","state","redirect","_this2","login","status","alert","setState","_this3","react_default","a","createElement","Redirect","to","pathname","_id","reactstrap_es","fluid","className","htmlFor","id","placeholder","onChange","e","target","value","type","required","onClick","Component","MovieService","URL","MovieCard","_ref","movie","poster_url","image","src","alt","title","Link","concat","NowPlayingListItem","NowPlayingList","possibleConstructorReturn","getPrototypeOf","call","movies","moviesToRender","map","index","NowPlayingListItem_NowPlayingListItem","key","props","nowPlayingMovies","renderNowPlayingMovies","React","MAPI_URL","MovieApiClient","movieTitle","movieId","Search","_this","nowPlaying","query","movieService","instance","searchMovies","bind","assertThisInitialized","getMovieList","nowPlayingList","searchTerm","ApiUrl","getMovies","searchResults","result","results","MovieApiService","findNowPlayingMovies","href","event","_this4","aria-label","onclickSearch","MovieCard_MovieCard","poster_path","containers_NowPlayingList","Home","components_Search","UserHomeNavbar","userType","setUserId","logout","getSearchTerm","isloggedIn","getProfile","term","data-toggle","data-target","aria-controls","aria-expanded","UserHomeMovieCards","addMovieToUserWatchList","favoriteMovie","dislikeMovie","overview","UserListCards","deleteFromUserWatchList","styles","width","defineProperty","HEROKU_URL","MovieServiceClient","console","log","Content-Type","item","UserHomeContainer","removeMovieFromWatchlist","getWatchlistMovies","setWatchListState","watchList","favoriteMovies","dislikedMovies","setPopularMovies","setFavoriteMovies","truncatedMoviesList","slice","popularMovies","findPopularMovies","getFavouriteMovies","favourites","setWatchListMovies","favouriteMovies","_this5","saveDislike","_this6","UserHomeNavbar_UserHomeNavbar","components_UserHomeMovieCards","components_UserListCards","ProfileLinksComponent","goToFollowers","goToFollowing","UserService","setUser","followers","length","UserProfile","firstName","lastName","email","dob","city","phone","nuser","updateProfile","setTimeout","updatefields","readOnly","name","ProfileLinksComponent_ProfileLinksComponent","CriticHomeMovieCards","CriticListCards","LoginHomeContainer","usersList","components_CriticHomeMovieCards","components_CriticListCards","AdminServiceClient","favouriteMovie","RegisterUserContainer","userService","register","AdminContainer","users","editingFlag","newUsername","newUser","renderUsers","deleteUser","setUsers","toggleToEditMode","updateUser","usernameEdit","createUser","getUsers","style","users1","display","ref","node","_this7","txt","SearchResultsPage","setLoginToggle","flag","loggedIn","params","hidden","CRITIC_URL","CriticServiceClient","review","reviewId","CriticReviewContainer","reviewTitle","setMovie","reviewText","reviewTitleFormChange","submitReviewForCritic","reviewInput","text","movieName","createCriticReview","findMovieDetails","movieid","vote_average","popularity","CriticReviewsListItem","date","Date","createdDate","toLocaleDateString","reviewer","CriticReview","reviews","createReview","findAllCriticReviewsForMovie","setDetails","CriticReviewListItem_CriticReviewsListItem","original_title","DetailsPage","details","setMovieId","setType","MoveiApiServiceClient","original_language","CriticReview_CriticReview","ReviewsByCritic","reviewEditedText","setReviews","reviewEdit","updateReview","deleteReview","toggleToReviewMode","reviewList","updateCriticReview","findAllCriticReviewsForUser","deleteCriticReview","ExploreMoviesContainer","poster","favorite","watchlist","watchListMovie","page","FAN_URL","FanServiceClient","fanId","res","FanExploreContainer","userList","setUserList","followUser","unfollowUser","findAllUsers","listOfUsers","fanID","followFan","unfollowFan","fan","UserPublicProfile","nFollowers","nFollowing","findUserById","findMyFollowing","res_1","findMyFollowers","res_2","Favorites","WatchlistPage","setWatchlistMovies","App","BrowserRouter","Route","exact","path","component","CriticHomeContainer","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e597403a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","let _singleton = Symbol();\r\nlet heroku = 'http://desolate-retreat-56126.herokuapp.com/api/';\r\n//let heroku = 'http://localhost:4000/api/';\r\n\r\nclass UserServiceClient {\r\n\r\n    constructor(singletonToken) {\r\n        if (_singleton !== singletonToken)\r\n            throw new Error('Cannot instantiate directly.');\r\n    }\r\n\r\n    static get instance() {\r\n        if (!this[_singleton])\r\n            this[_singleton] = new UserServiceClient(_singleton);\r\n        return this[_singleton]\r\n    }\r\n\r\n    static isloggedIn(){\r\n        return fetch(heroku+'login',{\r\n            credentials:'include'\r\n        })\r\n    }\r\n\r\n    static isAdmin(){\r\n        return fetch(heroku+'login/isAdmin',{\r\n            credentials:'include'\r\n        })\r\n    }\r\n\r\n    static login(username,password) {\r\n        var user ={\r\n            username: username,\r\n            password:password};\r\n        return fetch(heroku+'login',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials:'include',\r\n            body: JSON.stringify(user),\r\n        })\r\n    }\r\n\r\n    static  logout (){\r\n        return fetch(heroku+'logout',{\r\n            credentials:'include'\r\n        })\r\n    }\r\n\r\n    static register(user){\r\n        var newuser = user\r\n        return fetch(heroku+'register',{\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            method:'POST',\r\n            body:JSON.stringify(newuser),\r\n            credentials:'include',\r\n        })\r\n\r\n    }\r\n\r\n    static createUser (user){\r\n        return fetch(heroku+'user',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials:'include',\r\n            body:JSON.stringify(user),\r\n        }).then(response=>response.json())\r\n    }\r\n\r\n    static findUserById(userId){\r\n        return fetch(heroku+'user/'+userId,{\r\n            method:'GET',\r\n            credentials:'include',\r\n        }).then(response=>response.json())\r\n    }\r\n\r\n    static findAllUsers(){\r\n        return fetch(heroku+'user',{\r\n            method:'GET',\r\n            credentials:'include',\r\n        }).then(response=>response.json())\r\n    }\r\n\r\n    static updateProfile(user){\r\n        return fetch(heroku+'profile',{\r\n            method:'PUT',\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body:JSON.stringify(user),\r\n            credentials:'include'\r\n        })\r\n    }\r\n\r\n    static getProfile() {\r\n    return fetch(heroku+'profile',{\r\n        method:'GET',\r\n        credentials:'include'\r\n    }).then(response=>response.json())\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default UserServiceClient;","import React, {Component} from 'react'\r\nimport { Jumbotron, Container } from 'reactstrap';\r\nimport UserServiceClient from '../services/user.service.client'\r\nimport {Redirect} from 'react-router-dom'\r\nexport default class LoginComponent extends Component{\r\n    username = '';\r\n    password = '';\r\n\r\n    state = {\r\n        redirect: false,\r\n        user:''\r\n    }\r\n    login(username,password){\r\n\r\n        (UserServiceClient.login(username,password)).then(response=>\r\n        {\r\n            if (response.status === 500) {\r\n            alert(\"Wrong username or password\")\r\n        }\r\n        else {\r\n            response.json().then(user=>\r\n            {if (user){\r\n                this.setState({\r\n                    redirect:true,\r\n                    user:user\r\n                })}})}\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect === true) {\r\n            return (\r\n                <Redirect to={{\r\n                    pathname: \"/profile/\" + this.state.user._id,\r\n                }}/>)\r\n        }\r\n            return (\r\n                <div>\r\n                    <Jumbotron fluid className=\"bg-light\">\r\n                        <Container>\r\n\r\n                            <h1 className=\"display-3\">\r\n                                <i className=\"fa fa-video-camera pr-1 text-warning\"></i>\r\n                                Pick Flick\r\n                            </h1>\r\n                            <p className=\"lead text-secondary\">The one stop hub for movie aficionados </p>\r\n                        </Container>\r\n                    </Jumbotron>\r\n                    <Container>\r\n                        <h1>\r\n                            Sign In\r\n                        </h1>\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"username\"\r\n                                       className=\"col-sm-2 col-form-label\">\r\n                                    Username\r\n                                </label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input className=\"form-control\"\r\n                                           id=\"username\"\r\n                                           placeholder=\"alice\"\r\n                                           onChange={(e) => this.username = e.target.value}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"password\"\r\n                                       className=\"col-sm-2 col-form-label\">\r\n                                    Password\r\n                                </label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input type=\"password\"\r\n                                           className=\"form-control\"\r\n                                           id=\"password\"\r\n                                           placeholder=\"123qwe#$%\"\r\n                                           onChange={(e) => this.password = e.target.value}\r\n                                           required/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group row\">\r\n                                <label className=\"col-sm-2 col-form-label\"></label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <button className=\"btn btn-primary btn-block\"\r\n                                            type=\"button\"\r\n                                            id=\"signInBtn\"\r\n                                            onClick={() => this.login(this.username, this.password)}>\r\n                                        Sign in\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Container>\r\n                </div>\r\n            )\r\n        }\r\n    }","let _singleton = Symbol();\r\n\r\nclass MovieService {\r\n    constructor(singletonToken) {\r\n        if (_singleton !== singletonToken)\r\n            throw new Error('Cannot instantiate directly.');\r\n    }\r\n\r\n    static get instance() {\r\n        if (!this[_singleton])\r\n            this[_singleton] = new MovieService(_singleton);\r\n        return this[_singleton]\r\n    }\r\n\r\n    getMovies(URL) {\r\n        return fetch(URL)\r\n            .then(function (response) {\r\n                return response.json();\r\n            });\r\n    }\r\n}\r\n\r\nexport default MovieService;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const MovieCard = ({movie, image}) => {\r\n    let poster_url = \"https://image.tmdb.org/t/p/w500\"+image;\r\n    return (\r\n\r\n        <div className='col-lg-3 col-md-4 col-sm-6'>\r\n            <div className='card h-100'>\r\n                <img className=\"card-img-top\" src={poster_url} alt=\"Card image cap\"/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{movie.title}</h5>\r\n                </div>\r\n                <div className=\"card-footer text-muted\">\r\n                    <Link className='btn btn-outline-info' to={`/details/${movie.id}`}>View</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const NowPlayingListItem = ({movie}) =>\r\n    <Link to={`/details/${movie.id}`}>\r\n        <div className='list-group-item list-group-item-action row'>\r\n            <p>{movie.title}</p>\r\n        </div>\r\n    </Link>","import React from 'react';\r\nimport {NowPlayingListItem} from \"../components/NowPlayingListItem\"\r\n\r\nclass NowPlayingList extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    renderNowPlayingMovies(movies) {\r\n        let moviesToRender = null;\r\n\r\n        if (movies) {\r\n            moviesToRender = movies.map((movie, index) =>\r\n                <NowPlayingListItem key={index}\r\n                                    movie={movie}/>);\r\n        }\r\n        return (moviesToRender);\r\n    }\r\n\r\n    render() {\r\n        let movies = this.props.nowPlayingMovies;\r\n        return(\r\n            <div className='list-group'>\r\n                <div className='list-group-item list-group-item-action bg-dark row'>\r\n                    <h4 className=\"text-white\">Now Playing</h4>\r\n                </div>\r\n                {this.renderNowPlayingMovies(movies)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default NowPlayingList;","let _singleton = Symbol();\r\nlet MAPI_URL = 'http://desolate-retreat-56126.herokuapp.com/api/movie';\r\n//let MAPI_URL = 'http://localhost:4000/api/movie';\r\n\r\nclass MovieApiClient {\r\n    constructor(singletonToken) {\r\n        if (_singleton !== singletonToken)\r\n            throw new Error('Cannot instantiate directly.');\r\n    }\r\n\r\n    static get instance() {\r\n        if (!this[_singleton])\r\n            this[_singleton] = new MovieApiClient(_singleton);\r\n        return this[_singleton]\r\n    }\r\n\r\n    static findPopularMovies() {\r\n        return fetch(MAPI_URL+'/popular',{\r\n            credentials:'include'\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    static findUpcomingMovies() {\r\n        return fetch(MAPI_URL+'/upcoming',{\r\n            credentials:'include'\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    static searchMovie(movieTitle) {\r\n        return fetch(MAPI_URL+'/search/'+movieTitle,{\r\n            credentials:'include'\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    static findMovieDetails(movieId) {\r\n        return fetch(MAPI_URL+'/detail/'+movieId,{\r\n            credentials:'include'\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    static discoverMovies() {\r\n        return fetch(MAPI_URL+'/discover',{\r\n            credentials:'include'\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    static findNowPlayingMovies(){\r\n        return fetch (MAPI_URL+'/get-now-playing',{\r\n            credentials:'include'\r\n        }).then(response => response.json())\r\n    }\r\n\r\n}\r\nexport default MovieApiClient;\r\n","import React from 'react'\r\nimport MovieService from \"../services/MovieService\";\r\nimport {MovieCard} from \"./MovieCard\";\r\nimport NowPlayingList from \"../containers/NowPlayingList\";\r\nimport MovieApiService from \"../services/mapi.service.client\"\r\nclass Search extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {movies:[],\r\n        nowPlaying : [],\r\n        query:''};\r\n\r\n        this.movieService = MovieService.instance;\r\n        this.searchMovies = this.searchMovies.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getMovieList(\"social\");\r\n        this.nowPlayingList();\r\n\r\n    }\r\n\r\n    getMovieList(searchTerm) {\r\n        let ApiUrl = \"https://api.themoviedb.org/3/search/movie?api_key=d69881dd92cd9823997ee32f5f66b479&query=\" + searchTerm;\r\n        this.movieService\r\n            .getMovies(ApiUrl)\r\n            .then((searchResults) => {\r\n                let result = searchResults.results;\r\n                this.setState({movies: result});\r\n            })\r\n    }\r\n\r\n    nowPlayingList(){\r\n        MovieApiService.findNowPlayingMovies()\r\n            .then((result) => {\r\n                this.setState({nowPlaying: result.results})\r\n            });\r\n    }\r\n\r\n    onclickSearch(){\r\n\r\n        this.getMovieList(this.state.query);\r\n        window.location.href='/search/'+this.state.query\r\n    }\r\n\r\n    searchMovies(event) {\r\n        this.setState({query:event.target.value})\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input className=\"form-control mr-sm-2\"\r\n                       id=\"search-movies\"\r\n                       type=\"search\" onChange={this.searchMovies} placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                        onClick={()=>this.onclickSearch()\r\n                        }type=\"button\">Search</button>\r\n\r\n                <div className='row m-2'>\r\n                    <div className='col-9'>\r\n                        <div className=\"card-deck\">\r\n                            {this.state.movies.map((movie, index) => {\r\n                                return (\r\n                                    <MovieCard key={index} image={movie.poster_path} movie={movie}/>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                        <div className='col-3'>\r\n                            <NowPlayingList nowPlayingMovies={this.state.nowPlaying}/>\r\n                        </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react'\r\nimport Search from '../components/Search'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n                <div>\r\n                    <nav className=\"navbar navbar-light bg-light\">\r\n                        <a className=\"navbar-brand\">\r\n                            <i className=\"fa fa-video-camera pr-1 text-warning\"></i>\r\n                            PickFlick\r\n                        </a>\r\n\r\n                        <ul className=\"nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/login\" className=\"nav-link text-dark\">\r\n                                    Login\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/register\" className=\"nav-link text-dark\">\r\n                                    Sign up!\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/fan/explore\" className=\"nav-link\">Explore</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <form className=\"form-inline\">\r\n                        <Search/>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {Redirect,Link} from 'react-router-dom';\r\nimport UserServiceClient from '../services/user.service.client'\r\n\r\nexport default class UserHomeNavbar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n            userId:'',\r\n            userType:'',\r\n            searchTerm:'',\r\n            movies:[]\r\n        };\r\n\r\n        this.setUserId = this.setUserId.bind(this)\r\n        this.logout = this.logout.bind(this)\r\n        this.getSearchTerm = this.getSearchTerm.bind(this)\r\n        this.searchResults = this.searchResults.bind(this)\r\n\r\n    }\r\n\r\n    setUserId(userId,type){\r\n        this.setState({\r\n            userId:userId,\r\n            userType: type\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        //UserServiceClient.getProfile().then(user => this.setUserId(user._id,user.type))\r\n        UserServiceClient.isloggedIn().then(response => {\r\n            if(response.status === 200){\r\n                UserServiceClient.getProfile().then(user => this.setUserId(user._id,user.type))\r\n            }\r\n           /* else{\r\n                alert(\"not logged in\")\r\n            }*/\r\n        })\r\n\r\n    }\r\n\r\n    logout(){\r\n        UserServiceClient.logout().then(()=>{\r\n            window.location.href='/'\r\n        })\r\n\r\n    }\r\n\r\n    getSearchTerm(term){\r\n        this.setState({\r\n            searchTerm:term\r\n        });\r\n    }\r\n\r\n    searchResults(){\r\n        window.location.href='/search/'+this.state.searchTerm\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    {\r\n                        this.state.userType === 'Critic' &&\r\n                        <Link to={\"/critic/\"+this.state.userId+\"/critic-home\"} className=\"navbar-brand\" >\r\n                            <i className=\"fa fa-video-camera pr-1 text-warning\"></i>\r\n                            PickFlick\r\n                        </Link>\r\n                    }\r\n\r\n                    {\r\n                        this.state.userType !== 'Critic' &&\r\n                        <Link to={\"/\" + this.state.userId + \"/home\"} className=\"navbar-brand\">\r\n                            <i className=\"fa fa-video-camera pr-1 text-warning\"></i>\r\n                            PickFlick\r\n                        </Link>\r\n                    }\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            {/*<li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link\">\r\n                                    Series\r\n                                    <span className=\"sr-only\">(current)</span></Link>\r\n                            </li>*/}\r\n                            {\r\n                                this.state.userType === 'Admin' &&\r\n                                <li>\r\n                                    <Link to={\"/admin/\"+this.state.userId} className=\"nav-link\">Admin Console</Link>\r\n                                </li>\r\n                            }\r\n\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/fan/explore\" className=\"nav-link\">Explore</Link>\r\n                            </li>\r\n                            {\r\n                                this.state.userType === 'Critic' &&\r\n                                <li>\r\n                                    <Link to={\"/critic/\"+this.state.userId+\"/reviews\"} className=\"nav-link\">My Reviews</Link>\r\n                                </li>\r\n                            }\r\n\r\n                        </ul>\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <input className=\"form-control mr-sm-2\"\r\n                                   type=\"search\"\r\n                                   placeholder=\"type something..\"\r\n                                   aria-label=\"Search\"\r\n                                   onChange={(e) => this.getSearchTerm(e.target.value)} />\r\n                        </form>\r\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                                onClick={() => this.searchResults()}>\r\n                            Search\r\n                        </button>\r\n                        <div className=\"float-right\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={'/profile/'+this.state.userId}\r\n                                      className=\"nav-link\">\r\n                                    <i className=\"fa fa-user\"></i>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn nav-link bg-dark\" onClick={this.logout}>\r\n                                    <i className=\"fa fa-power-off\"></i>\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst UserHomeMovieCards = ({movie,addMovieToUserWatchList,favoriteMovie,dislikeMovie}) =>\r\n    <div>\r\n        <div className=\"card\">\r\n            <img className=\"card-img-top\" src={\"https://image.tmdb.org/t/p/w185\" + movie.poster_path}/>\r\n                <div className=\"card-body\">\r\n                    <h6 className=\"card-title\">{movie.title}</h6>\r\n                    <p className=\"card-text text-muted text-truncate\">{movie.overview}</p>\r\n                    <button className=\"btn btn-outline-warning btn-sm mr-1\"\r\n                            onClick={() => {addMovieToUserWatchList(movie)}}>\r\n                        <i className=\"fa fa-plus\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-outline-success btn-sm mr-1\" onClick={() => favoriteMovie(movie)}>\r\n                        <i className=\"fa fa-thumbs-up\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-outline-danger btn-sm mr-1\">\r\n                        <i className=\"fa fa-thumbs-down\" onClick={() => dislikeMovie(movie)}></i>\r\n                    </button>\r\n                    <div>\r\n                        <Link to={`/details/${movie.id}`}>\r\n                            More details\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n        </div>\r\n    </div>\r\n\r\nexport default UserHomeMovieCards;","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst UserListCards = ({movie,deleteFromUserWatchList}) =>{\r\n    let poster_path = 'https://image.tmdb.org/t/p/w500'+ movie.poster_path;\r\nreturn (\r\n    <div>\r\n        <div className=\"card\" styles={{width: '18rem'}}>\r\n            <img className=\"card-img-top\"\r\n                 alt=\"Card image cap\" src={poster_path} alt=''/>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{movie.title}</h5>\r\n                <p className=\"card-text text-muted\">{movie.overview}</p>\r\n                <Link to={`/details/${movie.id}`}>\r\n                    More details\r\n                </Link>\r\n                <button className=\"btn btn-outline-danger btn-sm mr-1\"\r\n                        onClick={() => {deleteFromUserWatchList(movie)}}>\r\n                    <i className=\"fa fa-trash\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>)}\r\n\r\nexport default UserListCards;","let HEROKU_URL = 'http://desolate-retreat-56126.herokuapp.com/api/';\r\n//let HEROKU_URL = 'http://localhost:4000/api/';\r\n\r\nclass MovieServiceClient {\r\n\r\n    static getFavouriteMovies() {\r\n        return fetch(HEROKU_URL + 'movie/favourites', {\r\n            credentials: 'include'\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    static getWatchlistMovies() {\r\n        return fetch(HEROKU_URL + 'movie/watchlist', {\r\n            credentials: 'include'\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    static saveDislike(movie) {\r\n        console.log(movie)\r\n        return fetch(HEROKU_URL + 'dislikeMovie',{\r\n            method: 'delete',\r\n            credentials: \"include\",\r\n            body: JSON.stringify(movie),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    static removeMovieFromWatchlist(movie) {\r\n        return fetch(HEROKU_URL + `movie/${movie._id}/watchlist`,{\r\n            method: 'delete',\r\n            credentials: \"include\",\r\n            body: JSON.stringify(movie),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    static unrecommendMovie(item) {\r\n        return fetch(HEROKU_URL + 'unrecommendMovie',{\r\n            method: 'delete',\r\n            credentials: \"include\",\r\n            body: JSON.stringify(item),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    static getRecommendedMovies() {\r\n        return fetch(HEROKU_URL + 'recommendedMovies', {\r\n            credentials: 'include'\r\n        })\r\n    }\r\n\r\n    static setWatchListMovies(movie){\r\n        return fetch(HEROKU_URL + 'movie/'+movie.id+'/watchlist', {\r\n            method:'post',\r\n            credentials: 'include',\r\n            body: JSON.stringify(movie),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    static favouriteMovies(movie) {\r\n        return fetch(HEROKU_URL + 'movie/'+movie.id+'/favourite', {\r\n            method:'post',\r\n            credentials: 'include',\r\n            body: JSON.stringify(movie),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default MovieServiceClient;","import React, {Component} from 'react'\r\nimport UserHomeNavbar from \"../components/UserHomeNavbar\";\r\nimport {Row,Container} from 'reactstrap';\r\nimport MovieService from \"../services/MovieService\";\r\nimport UserHomeMovieCards from \"../components/UserHomeMovieCards\";\r\nimport UserListCards from \"../components/UserListCards\";\r\nimport MovieApiClient from \"../services/mapi.service.client\";\r\nimport MovieServiceClient from \"../services/movie.service.client\";\r\nimport {Link} from 'react-router-dom';\r\nimport UserServiceClient from \"../services/user.service.client\";\r\n\r\nexport default class UserHomeContainer extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            watchList: [],\r\n            favoriteMovies:[],\r\n            dislikedMovies:[]\r\n        };\r\n        this.setPopularMovies = this.setPopularMovies.bind(this)\r\n        this.setFavoriteMovies = this.setFavoriteMovies.bind(this)\r\n        this.setWatchListState = this.setWatchListState.bind(this)\r\n        this.addMovieToUserWatchList = this.addMovieToUserWatchList.bind(this)\r\n        this.favoriteMovie = this.favoriteMovie.bind(this)\r\n        this.dislikeMovie = this.dislikeMovie.bind(this)\r\n    }\r\n\r\n    setPopularMovies(movies){\r\n        let truncatedMoviesList  = movies.slice(0,6)\r\n        this.setState({\r\n            popularMovies:truncatedMoviesList\r\n        })\r\n    }\r\n\r\n    setWatchListState(movies){\r\n        this.setState({\r\n            watchList:movies\r\n        })\r\n\r\n    }\r\n\r\n    setFavoriteMovies(movies){\r\n        this.setState({\r\n            favoriteMovies:movies\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        UserServiceClient.getProfile().then(user => {\r\n            if(user.type === 'Critic'){\r\n                window.location.href='/critic/' + user._id + '/critic-home'\r\n            }\r\n\r\n        });\r\n        MovieApiClient.findPopularMovies().then(movies => this.setPopularMovies(movies.results))\r\n        MovieServiceClient.getWatchlistMovies().then(movies => this.setWatchListState(movies.watchList))\r\n        MovieServiceClient.getFavouriteMovies().then(movies => this.setFavoriteMovies(movies.favourites))\r\n    }\r\n\r\n\r\n    addMovieToUserWatchList(movie){\r\n        MovieServiceClient.setWatchListMovies(movie).then(response=>\r\n        {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            }\r\n            else {\r\n                MovieServiceClient.getWatchlistMovies().then(movies=>this.setWatchListState(movies.watchList))\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteFromUserWatchList = (movie) => {\r\n        MovieServiceClient.removeMovieFromWatchlist(movie).then(response=>\r\n        {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            }\r\n            else {\r\n                MovieServiceClient.getWatchlistMovies().then(movies=>this.setWatchListState(movies.watchList))\r\n            }\r\n        })\r\n    }\r\n\r\n    favoriteMovie(movie){\r\n        MovieServiceClient.favouriteMovies(movie).then(response=>\r\n        {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            }\r\n            else {\r\n                MovieServiceClient.getFavouriteMovies().then(movies => this.setFavoriteMovies(movies.favourites))\r\n            }\r\n        })\r\n    }\r\n\r\n    dislikeMovie(movie){\r\n        MovieServiceClient.saveDislike(movie).then(response=>\r\n        {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            }\r\n            else {\r\n                MovieServiceClient.getFavouriteMovies().then(movies => this.setFavoriteMovies(movies.favourites))\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n\r\n                <UserHomeNavbar/>\r\n\r\n                <div className=\"mt-2 container\">\r\n                    <h5>Trending now </h5>\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.state.popularMovies && this.state.popularMovies.map((movie,index) => {\r\n                                return <div className=\"col-lg-2 col-md-4 col-sm-12\">\r\n                                        {movie &&\r\n                                            <UserHomeMovieCards\r\n                                                key={index}\r\n                                                movie={movie}\r\n                                                addMovieToUserWatchList={this.addMovieToUserWatchList}\r\n                                                favoriteMovie={this.favoriteMovie}\r\n                                                dislikeMovie={this.dislikeMovie}/>\r\n                                        }\r\n                                        </div>\r\n\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h5>My WatchList </h5>\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.state.watchList && this.state.watchList.map((movie,index) => {\r\n                                return <div className=\"col-lg-2 col-md-4 col-sm-12\">\r\n                                        {   movie &&\r\n                                        <UserListCards\r\n                                        key={index}\r\n                                        movie={movie}\r\n                                        deleteFromUserWatchList={this.deleteFromUserWatchList}/>\r\n                                        }\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <h5 className=\"m-1\">My Favorite Movies</h5>\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.state.favoriteMovies && this.state.favoriteMovies.map((movie,index) => {\r\n                                return <div className=\"col-lg-2 col-md-4 col-sm-12\">\r\n                                        { movie &&\r\n                                    <UserListCards\r\n                                        key={index}\r\n                                        movie={movie}\r\n                                        deleteFromUserWatchList={this.dislikeMovie}/>\r\n                                        }\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}","import UserServiceClient from \"../services/user.service.client\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React, {Component} from \"react\";\r\nimport UserService from '../services/user.service.client'\r\n\r\nexport default class ProfileLinksComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user:''\r\n        };\r\n        this.goToFollowers=this.goToFollowers.bind(this)\r\n        this.goToFollowing=this.goToFollowing.bind(this)\r\n    }\r\n\r\n    setUser(user){\r\n        this.setState({user:user})\r\n    }\r\n    componentWillMount(){\r\n       UserService.getProfile().then(user => {\r\n            this.setUser(user)\r\n        });\r\n    }\r\n\r\n    goToFollowers(){\r\n        window.location.href='/follower/' + this.state.user._id\r\n    }\r\n    goToFollowing(){\r\n        window.location.href='/following/' + this.state.user._id\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ul className=\"list-group\">\r\n                { this.state.user.type === 'Critic' &&\r\n                    <Link to={\"/critic/\"+this.state.user._id+\"/critic-home\"} >\r\n                        <li className=\"list-group-item\"> My Home </li>\r\n                    </Link>\r\n                }\r\n                { this.state.user.type !== 'Critic' &&\r\n                    <Link to={\"/\"+this.state.user._id+\"/home\"} >\r\n                        <li className=\"list-group-item\"> My Home </li>\r\n                    </Link>\r\n                }\r\n                <Link to={'/favorites/' + this.state.user._id}>\r\n                    <li className=\"list-group-item\">My Favorites</li>\r\n                </Link>\r\n                <Link to={'/watchlist/' + this.state.user._id}>\r\n                    <li className=\"list-group-item\">My Watchlist</li>\r\n                </Link>\r\n                <li className=\"list-group-item\">\r\n                    Followers: {this.state.user.followers && this.state.user.followers.length}</li>\r\n                <li className=\"list-group-item\"\r\n                    onClick={()=>this.goToFollowing()}>Following: {}</li>\r\n\r\n            </ul>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport UserServiceClient from \"../services/user.service.client\"\r\nimport UserHomeNavbar from \"../components/UserHomeNavbar\";\r\nimport ProfileLinksComponent from \"../components/ProfileLinksComponent\"\r\nexport default class UserProfile extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            user: {\r\n                id:'',\r\n                username: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                dob: '',\r\n                city: '',\r\n                phone: '',\r\n                type:'Fan'\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n       UserServiceClient.getProfile().then(user=> this.setUser(user))\r\n\r\n    }\r\n\r\n    setUser(user){\r\n        this.setState({user:user})\r\n    }\r\n\r\n    updatefields(type,e){\r\n        if(type==='username'){\r\n            this.state.user.username = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type==='type'){\r\n            this.state.user.type = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type==='password'){\r\n            this.state.user.password = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type==='firstname'){\r\n            this.state.user.firstName = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type==='lastname'){\r\n            this.state.user.lastName = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type==='email'){\r\n            this.state.user.email = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type==='phone'){\r\n            this.state.user.phone = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type==='city'){\r\n            this.state.user.city = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type==='dob'){\r\n            this.state.user.dob = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n    }\r\n\r\n    logout(){\r\n        UserServiceClient.logout().then(()=>{\r\n            window.location.href='/'\r\n        })\r\n    }\r\n\r\n    updateProfile(){\r\n         UserServiceClient.updateProfile(this.state.user).then(response => console.log(response.status))\r\n        alert(\"Successfully updated profile\")\r\n        setTimeout(()=>UserServiceClient.getProfile().then(user=> this.setUser(user)), 500)\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <UserHomeNavbar/>\r\n                <div className=\"container\">\r\n                    <h1>Hey {this.state.user.firstName}!</h1>\r\n                    <h5>My Profile</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-8\">\r\n                            <form>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"username\"\r\n                                           className=\"col-sm-2 col-form-label\">\r\n                                        Username\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-8\">\r\n                                        <input className=\"form-control\"\r\n                                               id=\"username\"\r\n                                               value={this.state.user.username}\r\n                                               onChange={(e)=> this.updatefields('username',e.target.value)}\r\n                                               readOnly />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"password\"\r\n                                           className=\"col-sm-2 col-form-label\">\r\n                                        Password\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-8\">\r\n                                        <input className=\"form-control\"\r\n                                               type=\"password\"\r\n                                               id=\"password\"\r\n                                               onChange={(e)=> this.updatefields('password',e.target.value)}\r\n                                               value={this.state.user.password}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"password\"\r\n                                           className=\"col-sm-2 col-form-label\">\r\n                                        User Type\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-8\">\r\n                                        <select name=\"userType\"\r\n                                                className=\"form-control\"\r\n                                                type=\"dropdown\"\r\n                                                id=\"type\"\r\n                                                onChange={(e)=> this.updatefields('type',e.target.value)}>\r\n                                            value={this.state.user.password}/>\r\n                                            <option value=\"fan\">Fan</option>\r\n                                            <option value=\"critic\">Critic</option>\r\n                                        </select>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"fName\"\r\n                                           className=\"col-sm-2 col-form-label\">\r\n                                        First Name\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-8\">\r\n                                        <input className=\"form-control\"\r\n                                               type=\"text\"\r\n                                               id=\"firstName\"\r\n                                               onChange={(e)=> this.updatefields('firstname',e.target.value)}\r\n                                               value={this.state.user.firstName}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"lName\"\r\n                                           className=\"col-sm-2 col-form-label\">\r\n                                        Last Name\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-8\">\r\n                                        <input className=\"form-control\"\r\n                                               type=\"text\"\r\n                                               id=\"lName\"\r\n                                               onChange={(e)=> this.updatefields('lastname',e.target.value)}\r\n                                               value={this.state.user.lastName}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"email\"\r\n                                           className=\"col-sm-2 col-form-label\">\r\n                                        Email\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-8\">\r\n                                        <input className=\"form-control\"\r\n                                               type=\"email\"\r\n                                               id=\"email\"\r\n                                               onChange={(e)=> this.updatefields('email',e.target.value)}\r\n                                               value={this.state.user.email}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"dob\"\r\n                                           className=\"col-sm-2 col-form-label\">\r\n                                        Date of birth\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-8\">\r\n                                        <input className=\"form-control\"\r\n                                               type=\"date\"\r\n                                               id=\"dob\"\r\n                                               onChange={(e)=> this.updatefields('dob',e.target.value)}\r\n                                               value={this.state.user.dob}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"phone\"\r\n                                           className=\"col-sm-2 col-form-label\">\r\n                                        Phone\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-8\">\r\n                                        <input className=\"form-control\"\r\n                                               type=\"phone\"\r\n                                               id=\"phone\"\r\n                                               onChange={(e)=> this.updatefields('phone',e.target.value)}\r\n                                               value={this.state.user.phone}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"city\"\r\n                                           className=\"col-sm-2 col-form-label\">\r\n                                        City\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-8\">\r\n                                        <input className=\"form-control\"\r\n                                               type=\"text\"\r\n                                               id=\"city\"\r\n                                               onChange={(e)=> this.updatefields('city',e.target.value)}\r\n                                               value={this.state.user.city}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    {/*<div className=\"col-sm-8 my-2\">\r\n                                        <Link to={\"/\"+this.state.user.id+\"/home\"}>\r\n                                            <button className=\"btn btn-success btn-block\">\r\n                                                Home\r\n                                            </button>\r\n                                        </Link>\r\n                                    </div>*/}\r\n                                    <div className=\"col-sm-8 mt-2\">\r\n                                        <Link to=\"/\">\r\n                                            <button className=\"btn btn-danger btn-block\"\r\n                                                    onClick={this.logout}>\r\n                                                Logout\r\n                                            </button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n                            </form>\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-sm-8\">\r\n                                    <button className=\"btn btn-warning btn-block\"\r\n                                            onClick={()=>this.updateProfile()}>\r\n                                        Update\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <i className=\"fa fa-user fa-5x\"></i>\r\n                            <p className=\"h5\">My Links</p>\r\n                            <ProfileLinksComponent\r\n                                userId ={this.state.user._id}/>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CriticHomeMovieCards = ({key,movie,addMovieToUserWatchList, favoriteMovie,dislikeMovie}) =>\r\n    <div>\r\n        <div className=\"card\">\r\n            <img className=\"card-img-top\" src={\"https://image.tmdb.org/t/p/w185\" + movie.poster_path}/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{movie.title}</h5>\r\n                    <p className=\"card-text text-muted text-truncate\">{movie.overview}</p>\r\n                    <Link to={\"/movie/\"+movie.id+\"/review\"}>\r\n                        <button className=\"btn btn-outline-warning btn-sm mr-1\">\r\n                            <i className=\"fa fa-pencil\"></i>\r\n                        </button>\r\n                    </Link>\r\n                    <button className=\"btn btn-outline-warning btn-sm mr-1\"\r\n                            onClick={() => {addMovieToUserWatchList(movie)}}>\r\n                        <i className=\"fa fa-plus\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-outline-success btn-sm mr-1\"\r\n                            onClick={() => favoriteMovie(movie)}>\r\n                        <i className=\"fa fa-thumbs-up\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-outline-danger btn-sm mr-1\"\r\n                            onClick={() => dislikeMovie(movie)}>\r\n                        <i className=\"fa fa-thumbs-down\"></i>\r\n                    </button>\r\n                    <div>\r\n                        <Link to={`/details/${movie.id}`}>\r\n                            More details\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n\r\nexport default CriticHomeMovieCards;","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CriticListCards = ({movie,deleteFromUserWatchList}) => {\r\n    let poster_path = 'https://image.tmdb.org/t/p/w500' + movie.poster_path;\r\n    return (\r\n        <div>\r\n            <div className=\"card\" styles={{width: '18rem'}}>\r\n                <img className=\"card-img-top\" src={poster_path} alt=''/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{movie.title}</h5>\r\n                    <p className=\"card-text text-muted\">{movie.overview}</p>\r\n                    <Link to={`/details/${movie.id}`}>\r\n                        More details\r\n                    </Link>\r\n                    <Link to={\"/movie/\"+movie.id+\"/review\"}>\r\n                        <button className=\"btn btn-outline-warning btn-sm mr-1\">\r\n                            <i className=\"fa fa-pencil\"></i>\r\n                        </button>\r\n                    </Link>\r\n                    <button className=\"btn btn-outline-danger btn-sm mr-1\"\r\n                            onClick={() => {deleteFromUserWatchList(movie)}}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CriticListCards;","import React, {Component} from 'react'\r\nimport UserHomeNavbar from \"../components/UserHomeNavbar\";\r\nimport UserPageService from \"../services/user.page.service.client\"\r\nimport CriticHomeMovieCards from \"../components/CriticHomeMovieCards\";\r\nimport CriticListCards from \"../components/CriticListCards\";\r\nimport MovieServiceClient from \"../services/movie.service.client\";\r\nimport MovieApiClient from \"../services/mapi.service.client\";\r\nimport UserHomeMovieCards from \"../components/UserHomeMovieCards\";\r\nimport UserListCards from \"../components/UserListCards\";\r\n\r\nexport default class LoginHomeContainer extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: [],\r\n            usersList: [],\r\n            watchList: [],\r\n            popularMovies:[],\r\n            favoriteMovies:[]\r\n        };\r\n        this.setPopularMovies = this.setPopularMovies.bind(this)\r\n        this.setFavoriteMovies = this.setFavoriteMovies.bind(this)\r\n        this.setWatchListState = this.setWatchListState.bind(this)\r\n        this.addMovieToUserWatchList = this.addMovieToUserWatchList.bind(this)\r\n        this.favoriteMovie = this.favoriteMovie.bind(this)\r\n        this.dislikeMovie = this.dislikeMovie.bind(this)\r\n    }\r\n\r\n    setPopularMovies(movies){\r\n        let truncatedMoviesList  = movies.slice(0,6)\r\n        this.setState({\r\n            popularMovies:truncatedMoviesList\r\n        })\r\n    }\r\n\r\n    setWatchListState(movies){\r\n        this.setState({\r\n            watchList:movies\r\n        })\r\n\r\n    }\r\n\r\n    setFavoriteMovies(movies){\r\n        this.setState({\r\n            favoriteMovies:movies\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        MovieApiClient.findPopularMovies().then(movies => this.setPopularMovies(movies.results))\r\n        MovieServiceClient.getWatchlistMovies().then(movies => this.setWatchListState(movies.watchList))\r\n        MovieServiceClient.getFavouriteMovies().then(movies => this.setFavoriteMovies(movies.favourites))\r\n    }\r\n\r\n    addMovieToUserWatchList(movie){\r\n        MovieServiceClient.setWatchListMovies(movie).then(response=>\r\n        {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            }\r\n            else {\r\n                MovieServiceClient.getWatchlistMovies().then(movies=>this.setWatchListState(movies.watchList))\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteFromUserWatchList = (movie) => {\r\n        MovieServiceClient.removeMovieFromWatchlist(movie).then(response=>\r\n        {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            }\r\n            else {\r\n                MovieServiceClient.getWatchlistMovies().then(movies=>this.setWatchListState(movies.watchList))\r\n            }\r\n        })\r\n    }\r\n\r\n    favoriteMovie(movie){\r\n        console.log(movie)\r\n        MovieServiceClient.favouriteMovies(movie).then(response=>\r\n        {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            }\r\n            else {\r\n                console.log(\"fetching latest favorites\")\r\n                MovieServiceClient.getFavouriteMovies().then(movies => this.setFavoriteMovies(movies.favourites))\r\n            }\r\n        })\r\n    }\r\n\r\n    dislikeMovie(movie){\r\n        MovieServiceClient.saveDislike(movie).then(response=>\r\n        {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            }\r\n            else {\r\n                MovieServiceClient.getFavouriteMovies().then(movies => this.setFavoriteMovies(movies.favourites))\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n\r\n                <UserHomeNavbar/>\r\n                <div className=\"mt-2 container\">\r\n                    <h5>Trending now </h5>\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.state.popularMovies && this.state.popularMovies.map((movie,index) => {\r\n                                return <div className=\"col-lg-2 col-md-4 col-sm-12\">\r\n                                    {movie &&\r\n                                    <CriticHomeMovieCards\r\n                                        key={index}\r\n                                        movie={movie}\r\n                                        addMovieToUserWatchList={this.addMovieToUserWatchList}\r\n                                        favoriteMovie={this.favoriteMovie}\r\n                                        dislikeMovie={this.dislikeMovie}/>\r\n                                    }\r\n\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <h5>My WatchList </h5>\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.state.watchList && this.state.watchList.map((movie,index) => {\r\n                                return <div className=\"col-lg-2 col-md-4 col-sm-12\">\r\n                                    {   movie &&\r\n                                    <CriticListCards\r\n                                        key={index}\r\n                                        movie={movie}\r\n                                        deleteFromUserWatchList={this.deleteFromUserWatchList}/>\r\n                                    }\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <h5 className=\"m-1\">My Favorite Movies</h5>\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.state.favoriteMovies && this.state.favoriteMovies.map((movie,index) => {\r\n                                return <div className=\"col-lg-2 col-md-4 col-sm-12\">\r\n                                    {   movie &&\r\n                                    <CriticListCards\r\n                                        key={index}\r\n                                        movie={movie}\r\n                                        deleteFromUserWatchList={this.dislikeMovie}/>\r\n                                    }\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","let _singleton = Symbol();\r\n\r\nlet HEROKU_URL = 'http://desolate-retreat-56126.herokuapp.com/api/';\r\n//let HEROKU_URL = 'http://localhost:4000/api/';\r\nclass AdminServiceClient {\r\n    constructor(singletonToken) {\r\n        if (_singleton !== singletonToken)\r\n            throw new Error('Cannot instantiate directly.');\r\n    }\r\n\r\n    static get instance() {\r\n        if (!this[_singleton])\r\n            this[_singleton] = new AdminServiceClient(_singleton);\r\n        return this[_singleton]\r\n    }\r\n\r\n    static findAllFavoriteMovies() {\r\n        return fetch(HEROKU_URL + 'admin/user/favMovies', {\r\n            credentials: 'include',\r\n            method: 'get'\r\n        })\r\n    }\r\n\r\n    static getUsers(){\r\n        return fetch(HEROKU_URL+'admin/user',{\r\n            credentials: \"include\",\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json());\r\n    }\r\n\r\n    static updateUser(user){\r\n        return fetch(HEROKU_URL+'admin/user',{\r\n            credentials: \"include\",\r\n            method: 'post',\r\n            body:JSON.stringify(user),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n    }\r\n\r\n    static deleteUser(id){\r\n        return fetch(HEROKU_URL+'admin/user/'+id,{\r\n            credentials: \"include\",\r\n            method: 'delete',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n    }\r\n    \r\n\r\n    static deleteFavoriteMovie(favouriteMovie, user) {\r\n        return fetch(HEROKU_URL + `user/${user._id}/movie/${favouriteMovie._id}/dislike`,{\r\n            method: 'delete'\r\n        });\r\n    }\r\n}\r\n\r\nexport default AdminServiceClient;","import React, {Component} from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport UserServiceClient from \"../services/user.service.client\"\r\nimport AdminServiceClient from \"../services/admin.service.client\";\r\n\r\nexport default class RegisterUserContainer extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.userService = UserServiceClient.instance;\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                dob: '',\r\n                city: '',\r\n                phone: '',\r\n                type:'Fan'\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){ }\r\n\r\n\r\n    register(user){\r\n        UserServiceClient.register(this.state.user).then(response=>\r\n        {\r\n            if(response.status === 200){\r\n                alert(\"Registration successful, redirecting you to login page\")\r\n                window.location.href='/login'\r\n            }\r\n            else {\r\n                alert(\"Registration unsuccessful. Please try again later\")\r\n            }\r\n        })\r\n        //setTimeout(() => {UserServiceClient.getProfile().then(user => console.log(user))}, 2000)\r\n    }\r\n\r\n    updatefields(type,e){\r\n\r\n        if(type=='username'){\r\n            this.state.user.username = e;\r\n            let nuser = this.state.user;\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type=='password'){\r\n            this.state.user.password = e;\r\n            let nuser = this.state.user;\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type=='type'){\r\n            this.state.user.type = e;\r\n            let nuser = this.state.user;\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type=='firstname'){\r\n            this.state.user.firstName = e;\r\n            let nuser = this.state.user;\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type=='lastname'){\r\n            this.state.user.lastName = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type=='email'){\r\n            this.state.user.email = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type=='phone'){\r\n            this.state.user.phone = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type=='city'){\r\n            this.state.user.city = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n        if(type=='dob'){\r\n            this.state.user.dob = e;\r\n            let nuser = this.state.user\r\n            this.setState({user: nuser})\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <Link to=\"/\" className=\"navbar-brand\" >\r\n                        <i className=\"fa fa-video-camera pr-1 text-warning\">\r\n                        </i>\r\n                        PickFlick\r\n                    </Link>\r\n                </nav>\r\n                <div className=\"container\">\r\n                    <h1>Fill in your details</h1>\r\n                    <form>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"username\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Username\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-8\">\r\n                                <input className=\"form-control\"\r\n                                       id=\"username\"\r\n                                       onChange={(e)=> this.updatefields('username',e.target.value)}\r\n                                       value={this.state.user.username}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"password\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Password\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-8\">\r\n                                <input className=\"form-control\"\r\n                                       type=\"password\"\r\n                                       id=\"password\"\r\n                                       onChange={(e)=> this.updatefields(\"password\",e.target.value)}\r\n                                       value={this.state.user.password}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"usertype\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                User Type\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-8\">\r\n                                <select name=\"userType\"\r\n                                        className=\"form-control\"\r\n                                        type=\"dropdown\"\r\n                                        id=\"type\"\r\n                                        onChange={(e)=> this.updatefields('type',e.target.value)}>\r\n                                    value={this.state.user.type}/>\r\n                                    <option value=\"fan\">Fan</option>\r\n                                    <option value=\"critic\">Critic</option>\r\n                                </select>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"fName\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                First Name\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-8\">\r\n                                <input className=\"form-control\"\r\n                                       type=\"text\"\r\n                                       id=\"firstName\"\r\n                                       onChange={(e)=> this.updatefields(\"firstname\",e.target.value)}\r\n                                       value={this.state.user.firstName}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"lName\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Last Name\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-8\">\r\n                                <input className=\"form-control\"\r\n                                       type=\"text\"\r\n                                       id=\"lName\"\r\n                                       onChange={(e)=> this.updatefields('lastname',e.target.value)}\r\n                                       value={this.state.user.lastName}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"email\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Email\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-8\">\r\n                                <input className=\"form-control\"\r\n                                       type=\"email\"\r\n                                       id=\"email\"\r\n                                       onChange={(e)=> this.updatefields('email',e.target.value)}\r\n                                       value={this.state.user.email}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"dob\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Date of birth\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-8\">\r\n                                <input className=\"form-control\"\r\n                                       type=\"date\"\r\n                                       id=\"dob\"\r\n                                       onChange={(e)=> this.updatefields('dob',e.target.value)}\r\n                                       value={this.state.user.dob}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"phone\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Phone\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-8\">\r\n                                <input className=\"form-control\"\r\n                                       type=\"phone\"\r\n                                       id=\"phone\"\r\n                                       onChange={(e)=> this.updatefields('phone',e.target.value)}\r\n                                       value={this.state.user.phone}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"city\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                City\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-8\">\r\n                                <input className=\"form-control\"\r\n                                       type=\"text\"\r\n                                       id=\"city\"\r\n                                       onChange={(e)=> this.updatefields('city',e.target.value)}\r\n                                       value={this.state.user.city}/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-8 my-2\">\r\n\r\n                            <button className=\"btn btn-success btn-block\"\r\n                                    onClick={() => this.register(this.state.user)}>\r\n                                Sign up\r\n                            </button>\r\n\r\n                        </div>\r\n                        <div className=\"col-sm-8\">\r\n                            <Link to=\"/login\">\r\n                                Sign In\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport AdminServiceClient from '../services/admin.service.client';\r\nimport UserServiceClient from \"../services/user.service.client\";\r\nimport UserHomeNavbar from \"../components/UserHomeNavbar\";\r\n\r\n\r\nexport default class AdminContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userId: '',\r\n            users: [],\r\n            editingFlag:false,\r\n            newUsername:'',\r\n            newUser:[]\r\n        };\r\n\r\n        this.renderUsers = this.renderUsers.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.setUsers = this.setUsers.bind(this);\r\n        this.toggleToEditMode = this.toggleToEditMode.bind(this);\r\n        this.updateUser = this.updateUser.bind(this);\r\n        this.usernameEdit = this.usernameEdit.bind(this);\r\n        this.createUser = this.createUser.bind(this)\r\n    }\r\n\r\n    setUsers(users){\r\n        this.setState({users:users})\r\n    }\r\n\r\n    componentDidMount(){\r\n        UserServiceClient.getProfile().then(user=> this.setState({userId:user._id}));\r\n        AdminServiceClient.getUsers().then(users=> this.setUsers(users))\r\n\r\n    }\r\n\r\n    username;\r\n    firstName;\r\n    lastName;\r\n    type = 'Fan';\r\n    email;\r\n    city;\r\n    phone;\r\n    password;\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <UserHomeNavbar/>\r\n                <table className=\"table\">\r\n\r\n                    <thead className='thead-dark'>\r\n                    <tr>\r\n                        <th className=\"col\" style={{width: '12%'}}>Username</th>\r\n                        <th className=\"col\" style={{width: '7%'}}>Password</th>\r\n                        <th className=\"col\" style={{width: '12%'}}>Firstname</th>\r\n                        <th className=\"col\" style={{width: '12%'}}>Lastname</th>\r\n                        <th className=\"col\" style={{width: '12%'}}>Type</th>\r\n                        <th className=\"col\" style={{width: '14%'}}>Email</th>\r\n                        <th className=\"col\" style={{width: '12%'}}>City</th>\r\n                        <th className=\"col\" style={{width: '19%'}}>Phone</th>\r\n                        <th style={{width: '10%'}}></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <input placeholder='Username'\r\n                                   className=\"form-control\"\r\n                                   onChange={(event) => this.username = event.target.value}/>\r\n                        </td>\r\n                        <td>\r\n                            <input placeholder='Password'\r\n                                   className=\"form-control\"\r\n                                   onChange={(event) => this.password = event.target.value}/>\r\n                        </td>\r\n                        <td>\r\n                            <input placeholder='FirstName'\r\n                                   className=\"form-control\"\r\n                                   onChange={(event) => this.firstName = event.target.value}/>\r\n                        </td>\r\n                        <td>\r\n                            <input placeholder='LastName'\r\n                                   className=\"form-control\"\r\n                                   onChange={(event) => this.lastName = event.target.value}/>\r\n                        </td>\r\n                        <td>\r\n                            <select onChange={(event) => {this.type = event.target.value}}\r\n                                    className=\"form-control\">\r\n                                <option value=\"Fan\">Fan</option>\r\n                                <option value=\"Critic\">Critic</option>\r\n                                <option value=\"Admin\">Admin</option>\r\n                            </select>\r\n                        </td>\r\n                        <td>\r\n                            <input placeholder='Email'\r\n                                   className=\"form-control\"\r\n                                   onChange={(event) => this.email = event.target.value}/>\r\n                        </td>\r\n                        <td>\r\n                            <input placeholder='City'\r\n                                   className=\"form-control\"\r\n                                   onChange={(event) => this.city = event.target.value}/>\r\n                        </td>\r\n                        <td>\r\n                            <input placeholder='Phone'\r\n                                   className=\"form-control\"\r\n                                   onChange={(event) => this.phone = event.target.value}/>\r\n                        </td>\r\n                        <td>\r\n                            <button type='btn'\r\n                                    className=\"btn btn-success\"\r\n                                    onClick={() => this.createUser()}>\r\n                                Create\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n\r\n\r\n                    {this.renderUsers()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    createUser(){\r\n        let user ={\r\n            \"username\":this.username,\r\n            \"firstName\":this.firstName,\r\n            \"lastName\":this.lastName,\r\n            \"type\":this.type,\r\n            \"email\":this.email,\r\n            \"city\":this.city,\r\n            \"phone\":this.phone,\r\n            \"password\":this.password\r\n        }\r\n        console.log(user)\r\n        UserServiceClient.createUser(user)\r\n        setTimeout(() => {AdminServiceClient.getUsers().then(users1 =>  this.setState({users:users1}))}, 500)\r\n    }\r\n\r\n    toggleToEditMode(username){\r\n        this.setState({\r\n            editingFlag:true,\r\n            newUsername: username\r\n        });\r\n    }\r\n\r\n    renderUsers() {\r\n\r\n        if (this.state.users) {\r\n            return this.state.users.map(user => {\r\n                let input;\r\n                    return (\r\n                        <tr>\r\n                            <td>\r\n                                <div style={{display:this.state.editingFlag?'none':'block'}}>\r\n                                    {user.username}\r\n                                    <button className=\"m-1 btn btn-sm rounded-circle btn-outline-info\"\r\n                                            onClick={()=> this.toggleToEditMode(user.username)}>\r\n                                        <i className=\"fa fa-pencil\"></i>\r\n                                    </button>\r\n                                </div>\r\n                                <div style={{display:this.state.editingFlag?'block':'none'}}>\r\n                                    <input className=\"form-control\"\r\n                                           value={this.state.newUsername}\r\n                                           onChange={e => this.usernameEdit(e.target.value)}\r\n                                           ref={node => {input = node;}}/>\r\n                                    <button className=\"m-1 btn btn-sm rounded-circle btn-outline-success\"\r\n                                            onClick={() => this.updateUser(user)}>\r\n                                        <i className=\"fa fa-check\"></i>\r\n                                    </button>\r\n                                </div>\r\n                                </td>\r\n                            <td>{}</td>\r\n                            <td>{user.firstName}</td>\r\n                            <td>{user.lastName}</td>\r\n                            <td>{user.type}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.city}</td>\r\n                            <td>{user.phone}</td>\r\n                            <td>\r\n\r\n                                <button type='btn'\r\n                                        className=\"btn btn-danger\"\r\n                                        onClick={() => this.deleteUser(user._id)}>\r\n                                    <i className=\"fa fa-trash\"></i>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n               // }\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteUser(id) {\r\n        if(id != this.state.userId) {\r\n            AdminServiceClient.deleteUser(id);\r\n            setTimeout(() => {AdminServiceClient.getUsers().then(users1 =>  this.setState({users:users1}))}, 500)\r\n\r\n\r\n        }\r\n        else {\r\n            alert(\"You cannot delete your account\")\r\n        }\r\n        this.username = '';\r\n        this.firstName = '';\r\n        this.lastName = '';\r\n        this.type = 'Fan';\r\n        this.email = '';\r\n        this.city = '';\r\n        this.phone = '';\r\n        this.password = '';\r\n    }\r\n\r\n    updateUser(user) {\r\n        user.username = this.state.newUsername;\r\n        AdminServiceClient.updateUser(user);\r\n        setTimeout(() => {AdminServiceClient.getUsers().then(users1 =>  this.setState({users:users1}))}, 500)\r\n    }\r\n\r\n    usernameEdit(txt){\r\n        console.log(txt)\r\n        this.setState({\r\n            newUsername: txt\r\n        });\r\n    }\r\n\r\n    selectUser(user) {\r\n        console.log(user)\r\n        this.setState({userId: user._id});\r\n    }\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport UserHomeNavbar from \"./UserHomeNavbar\";\r\nimport UserHomeMovieCards from \"./UserHomeMovieCards\";\r\nimport MovieService from \"../services/MovieService\";\r\nimport UserListCards from \"./UserListCards\";\r\nimport MovieServiceClient from \"../services/movie.service.client\";\r\nimport UserServiceClient from \"../services/user.service.client\";\r\n\r\nexport default class SearchResultsPage extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.movieService = MovieService.instance;\r\n        this.state = {\r\n            movies:[],\r\n            watchList: [],\r\n            favoriteMovies:[],\r\n            dislikedMovies:[]\r\n        };\r\n        this.setFavoriteMovies = this.setFavoriteMovies.bind(this)\r\n        this.setWatchListState = this.setWatchListState.bind(this)\r\n        this.addMovieToUserWatchList = this.addMovieToUserWatchList.bind(this)\r\n        this.setLoginToggle = this.setLoginToggle.bind(this)\r\n        this.favoriteMovie = this.favoriteMovie.bind(this)\r\n        this.dislikeMovie = this.dislikeMovie.bind(this)\r\n    }\r\n    setLoginToggle(flag){\r\n        this.setState({\r\n            loggedIn: flag\r\n        })\r\n\r\n    }\r\n    componentDidMount() {\r\n        let searchTerm = this.props.match.params.term\r\n        console.log(searchTerm)\r\n        let ApiUrl = \"https://api.themoviedb.org/3/search/movie?api_key=d69881dd92cd9823997ee32f5f66b479&query=\" + searchTerm;\r\n        this.movieService\r\n            .getMovies(ApiUrl)\r\n            .then((searchResults) => {\r\n                let result = searchResults.results;\r\n                if (result) {\r\n                    this.setState({movies: result});\r\n                }\r\n            })\r\n        UserServiceClient.isloggedIn().then(response => {\r\n            if(response.status === 200){\r\n                this.setLoginToggle(true)\r\n            }\r\n            else{\r\n                this.setLoginToggle(false)\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    setWatchListState(movies){\r\n        this.setState({\r\n            watchList:movies\r\n        })\r\n\r\n    }\r\n\r\n    setFavoriteMovies(movies){\r\n\r\n        this.setState({\r\n            favoriteMovies:movies\r\n        })\r\n    }\r\n\r\n    addMovieToUserWatchList(movie){\r\n        if (this.state.loggedIn === false){\r\n            alert(\"Please log in to like the movie\")\r\n        }\r\n        else {\r\n        MovieServiceClient.setWatchListMovies(movie).then(response=>\r\n        {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            }\r\n            else {\r\n                MovieServiceClient.getWatchlistMovies().then(movies=>this.setWatchListState(movies.watchList))\r\n            }\r\n        })}\r\n    }\r\n\r\n    favoriteMovie(movie){\r\n    if (this.state.loggedIn === false){\r\n        alert(\"Please log in to like the movie\")\r\n    }\r\n    else {\r\n        MovieServiceClient.favouriteMovies(movie).then(response => {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            } else {\r\n                MovieServiceClient.getFavouriteMovies().then(movies => this.setFavoriteMovies(movies.favourites))\r\n            }\r\n        })\r\n    }\r\n    }\r\n\r\n    dislikeMovie(movie){\r\n        if (this.state.loggedIn === false){\r\n            alert(\"Please log in to like the movie\")\r\n        }\r\n        else {\r\n        MovieServiceClient.saveDislike(movie).then(response=>\r\n        {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            }\r\n            else {\r\n                MovieServiceClient.getFavouriteMovies().then(movies => this.setFavoriteMovies(movies.favourites))\r\n            }\r\n        })}\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div hidden={!this.state.loggedIn}>\r\n                    <UserHomeNavbar/>\r\n                </div>\r\n                <div hidden={this.state.loggedIn}>\r\n                    <nav className=\"navbar navbar-light bg-light\">\r\n\r\n                        <Link to=\"/\" className=\"navbar-brand\">\r\n                            <i className=\"fa fa-video-camera pr-1 text-warning\"></i>\r\n                            PickFlick\r\n                        </Link>\r\n                        <ul className=\"nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/login\" className=\"nav-link text-dark\">\r\n                                    Login\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/register\" className=\"nav-link text-dark\">\r\n                                    Sign up!\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/fan/explore\" className=\"nav-link\">Explore</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n\r\n                <div className=\"container-fluid\">\r\n                    Showing titles related to {this.props.match.params.term}\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.state.movies.map((movie,index) => {\r\n                                return <div className=\"col-lg-2 col-md-4 col-sm-12\">\r\n                                    {   movie &&\r\n                                    <UserHomeMovieCards\r\n                                        key={index}\r\n                                        movie={movie}\r\n                                        addMovieToUserWatchList={this.addMovieToUserWatchList}\r\n                                        favoriteMovie={this.favoriteMovie}\r\n                                        dislikeMovie={this.dislikeMovie}/>\r\n                                    }\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import MovieServiceClient from \"./movie.service.client\";\r\n\r\nlet _singleton = Symbol();\r\nlet CRITIC_URL = 'http://desolate-retreat-56126.herokuapp.com/api/review';\r\n//let CRITIC_URL = 'http://localhost:4000/api/review';\r\n\r\nclass CriticServiceClient {\r\n    constructor(singletonToken) {\r\n        if (_singleton !== singletonToken)\r\n            throw new Error('Cannot instantiate directly.');\r\n    }\r\n\r\n    static get instance() {\r\n        if (!this[_singleton])\r\n            this[_singleton] = new CriticServiceClient(_singleton);\r\n        return this[_singleton]\r\n    }\r\n\r\n    static createCriticReview(review) {\r\n        return fetch(CRITIC_URL, {\r\n            method:'post',\r\n            credentials: 'include',\r\n            body: JSON.stringify(review),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    static findAllCriticReviewsForMovie(movieId) {\r\n        return fetch(CRITIC_URL+\"/\"+movieId, {\r\n            credentials: 'include'\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    static findAllCriticReviewsForUser(){\r\n        return fetch(CRITIC_URL, {\r\n            credentials: 'include'\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    static deleteCriticReview(reviewId){\r\n        return fetch(CRITIC_URL + \"/\" + reviewId,{\r\n            method: 'delete',\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    static updateCriticReview(review){\r\n        return fetch(CRITIC_URL, {\r\n            method:'put',\r\n            credentials: 'include',\r\n            body: JSON.stringify(review),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CriticServiceClient;\r\n/*\r\napp.post('/api/review',createCriticReview);\r\n    app.get('/api/review/:movieId',findAllCriticReviewsForMovie);\r\n    app.get('/api/review',findAllCriticReviewsForUser);\r\n    app.delete('/api/review/:reviewId',deleteCriticReview);\r\n    app.put('/api/review',updateCriticReview);\r\n */","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport UserHomeNavbar from \"../components/UserHomeNavbar\";\r\nimport UserHomeMovieCards from \"../components/UserHomeMovieCards\";\r\nimport UserServiceClient from \"../services/user.service.client\";\r\nimport MovieApiClient from \"../services/mapi.service.client\";\r\nimport MovieServiceClient from \"../services/movie.service.client\";\r\nimport CriticServiceClient from \"../services/critic.service.client\";\r\n\r\nexport default class CriticReviewContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            user:'',\r\n            movie:'',\r\n            reviewTitle:'',\r\n            review:''\r\n        }\r\n        this.setUser = this.setUser.bind(this)\r\n        this.setMovie = this.setMovie.bind(this)\r\n        this.reviewText = this.reviewText.bind(this)\r\n        this.reviewTitleFormChange =this.reviewTitleFormChange.bind(this);\r\n        this.submitReviewForCritic =this.submitReviewForCritic.bind(this)\r\n    }\r\n\r\n    setUser(user){\r\n        this.setState({\r\n            user:user\r\n        })\r\n    }\r\n\r\n    setMovie(movie){\r\n        console.log(movie)\r\n        this.setState({\r\n            movie:movie\r\n        })\r\n    }\r\n\r\n    reviewText(txt){\r\n        this.setState({\r\n            review: txt\r\n        });\r\n    }\r\n\r\n    reviewTitleFormChange(txt){\r\n        this.setState({\r\n            reviewTitle: txt\r\n        });\r\n    }\r\n    submitReviewForCritic(){\r\n        /*\r\n            title: reviewInput.title,\r\n            text: reviewInput.text,\r\n            movieName: reviewInput.movieName,\r\n            movieId: reviewInput.movieId,\r\n         */\r\n        let reviewInput = {\r\n            \"title\": this.state.reviewTitle,\r\n            \"text\": this.state.review,\r\n            \"movieName\": this.state.movie.title,\r\n            \"movieId\":this.state.movie.id\r\n        }\r\n\r\n        CriticServiceClient.createCriticReview(reviewInput).then(response=>\r\n        {\r\n            if (response.status !== 200) {\r\n                alert(\"Internal Server Error, Try Again\")\r\n            }\r\n            else {\r\n                alert(\"Your review is saved!\")\r\n                window.location.href='/critic/' + this.state.user._id + '/critic-home'\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // check user is critic only later\r\n        UserServiceClient.getProfile().then(user => this.setUser(user))\r\n        MovieApiClient.findMovieDetails(this.props.match.params.movieid).then(movie => this.setMovie(movie))\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <UserHomeNavbar/>\r\n                <div className=\"mt-2 container\">\r\n\r\n                    <div className=\"list-group-item\">\r\n                        <h5>Review: {this.state.movie.title}</h5>\r\n                        <img className=\"form-inline\"\r\n                             src={\"https://image.tmdb.org/t/p/w185\" + this.state.movie.poster_path}>\r\n                        </img>\r\n                        <li className=\"mt-2\">\r\n                            Rating: {this.state.movie.vote_average}\r\n                        </li>\r\n                        <li>Popularity: {this.state.movie.popularity} </li>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n\r\n                                <label htmlFor=\"reviewTitle\"\r\n                                       className=\"m-2 font-italic\">\r\n                                    Title\r\n                                </label>\r\n                                <input id=\"reviewTitle\" type=\"text\" className=\"form-control\"\r\n                                       onChange={(e) => {this.reviewTitleFormChange(e.target.value)}}/>\r\n                                <label htmlFor=\"paraTxt\"\r\n                                       className=\"m-2 font-italic\">\r\n                                    Your review goes here\r\n                                </label>\r\n                                <textarea type=\"text\"\r\n                                          id=\"paraTxt\"\r\n                                          className=\"form-control\"\r\n                                          onChange={(e)=>{this.reviewText(e.target.value)}}>\r\n                                </textarea>\r\n                            </div>\r\n\r\n                            <Link to={\"/critic/\"+this.state.user._id+\"/critic-home\"}>\r\n                                <button className=\"btn btn-danger\"> Cancel </button>\r\n                            </Link>\r\n                            <button className=\"btn float-right btn-success\"\r\n                            onClick={(e) => {this.submitReviewForCritic()}}>\r\n                                Submit\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport const CriticReviewsListItem = ({review}) => {\r\n\r\n    let date = new Date(review.createdDate).toLocaleDateString();\r\n    return (\r\n        <div className=\"card shadow p-3 mb-5 bg-white rounded \">\r\n            <div className=\"card-body\">\r\n                <h5>{review.title}</h5>\r\n                <p>{date} | By {review.reviewer.firstName} {review.reviewer.lastName}</p>\r\n                <h6>{review.text}</h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {CriticReviewsListItem} from \"../components/CriticReviewListItem\";\r\nimport CriticServiceClient from \"../services/critic.service.client\"\r\nimport UserServiceClient from \"../services/user.service.client\";\r\n\r\nexport default class CriticReview extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reviews:'',\r\n            loggedIn: false,\r\n            userType: ''\r\n        };\r\n        this.createReview = this.createReview.bind(this)\r\n\r\n    }\r\n\r\n    componentWillMount(){\r\n        CriticServiceClient.findAllCriticReviewsForMovie(this.props.movieId).then((reviews) => {\r\n            this.setDetails(reviews)\r\n        });\r\n    }\r\n\r\n    setDetails(reviews) {\r\n        this.setState(\r\n            {\r\n                reviews: reviews\r\n            })\r\n    }\r\n\r\n    createReview(reviewTitle, reviewText, movieTitle, movieId){\r\n\r\n        UserServiceClient.isloggedIn().then(response => {\r\n            if(response.status === 200){\r\n                let review ={\r\n                    title: reviewTitle,\r\n                    text: reviewText,\r\n                    movieName: movieTitle,\r\n                    movieId: movieId\r\n                };\r\n\r\n                CriticServiceClient.createCriticReview(review).then(() => {\r\n                    CriticServiceClient.findAllCriticReviewsForMovie(this.props.movieId).then((reviews) => {\r\n                        this.setDetails(reviews)\r\n                    });\r\n                });\r\n            }\r\n\r\n            else {\r\n                alert(\"User must be logged in to review\")\r\n            }\r\n        })\r\n    }\r\n\r\n/*\r\n    loggedIn(){\r\n        UserServiceClient.isloggedIn().then(response => (response.status));\r\n    }\r\n*/\r\n\r\n\r\n    render() {\r\n        let text;\r\n        let title;\r\n        if (this.state.reviews) {\r\n            return (\r\n                <div>\r\n                    <div className='card-deck'>\r\n                        {this.state.reviews.map((review, index) => {\r\n                            return (\r\n                                <CriticReviewsListItem key={index}\r\n                                                       review={review}/>)\r\n                        })}\r\n                    </div>\r\n\r\n                    <div>\r\n\r\n                        <div className= \"form-group row\">\r\n                            <label className= \"col-sm-6 col-form-label\">\r\n                                Review Title\r\n                            </label>\r\n                            <div className= \"col-sm-12\">\r\n                                <input className=\"form-control\"\r\n                                       ref={node => title = node}\r\n                                       id=\"reviewTitle\"\r\n                                       placeholder=\"Review Title\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className= \"form-group row\">\r\n                            <label className= \"col-sm-6 col-form-label\">\r\n                                Write Review\r\n                            </label>\r\n                            <div className= \"col-sm-12\">\r\n                                <textarea ref={node => text = node}\r\n                                          className=\"form-control\"\r\n                                          placeholder=\"Write review\"\r\n                                          id=\"review-text\">\r\n                                </textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className= \"form-group row\">\r\n                            <label className= \"col-sm-6 col-form-label\">\r\n                            </label>\r\n                            <div className= \"col-sm-12\">\r\n                            <button className=\"btn btn-primary btn-block\"\r\n                                    onClick={() => {\r\n                                this.createReview(title.value, text.value, this.props.original_title,this.props.movieId)\r\n                                }}>\r\n                                    Submit\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <h3>Loading</h3>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport MoveiApiServiceClient from \"../services/mapi.service.client\"\r\nimport '../styles/movie.detail.client.css';\r\nimport CriticReview from \"./CriticReview\";\r\nimport UserServiceClient from \"../services/user.service.client\";\r\nimport UserHomeNavbar from \"./UserHomeNavbar\";\r\n\r\nclass DetailsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movieId:'',\r\n            details:'',\r\n            loggedIn: false,\r\n            userType:''\r\n        };\r\n        this.setLoginToggle = this.setLoginToggle.bind(this)\r\n        this.setMovieId = this.setMovieId.bind(this)\r\n        this.setDetails = this.setDetails.bind(this)\r\n        this.setType = this.setType.bind(this)\r\n    }\r\n\r\n    setMovieId(movieId){\r\n        this.setState({movieId: movieId})\r\n    }\r\n\r\n    setLoginToggle(flag){\r\n        this.setState({\r\n            loggedIn: flag\r\n        })\r\n\r\n    }\r\n\r\n    setType(type){\r\n        this.setState({\r\n            userType:type\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        MoveiApiServiceClient.findMovieDetails(this.props.match.params.movieId)\r\n            .then((details) => {\r\n                this.setDetails(details)\r\n            });\r\n        UserServiceClient.isloggedIn().then(response => {\r\n            if(response.status === 200){\r\n                this.setLoginToggle(true)\r\n                UserServiceClient.getProfile().then(user => this.setType(user.type))\r\n            }\r\n            else{\r\n                this.setLoginToggle(false)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    setDetails(details) {\r\n        this.setState(\r\n            {\r\n                details: details\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div hidden={this.state.loggedIn}>\r\n                    <nav className=\"navbar navbar-light bg-light\">\r\n\r\n                        <Link to=\"/\" className=\"navbar-brand\">\r\n                            <i className=\"fa fa-video-camera pr-1 text-warning\"></i>\r\n                            PickFlick\r\n                        </Link>\r\n                        <ul className=\"nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/login\" className=\"nav-link text-dark\">\r\n                                    Login\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/register\" className=\"nav-link text-dark\">\r\n                                    Sign up!\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/fan/explore\" className=\"nav-link\">Explore</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n\r\n                <div hidden={!this.state.loggedIn}>\r\n                    <UserHomeNavbar/>\r\n                </div>\r\n                    {/*<div>*/}\r\n                        {/*/!*{this.state.details}*!/*/}\r\n                        {/*<img*/}\r\n                             {/*src={this.state.details.poster_path}/>*/}\r\n                        {/*//adult, backdrop_path, belongs_to_collection, budget, genres, homepage, id, imdb_id, original_language, original_title, overview, popularity, poster_path, production_companies, production_countries, release_date, revenue, runtime, spoken_languages, status, tagline, title, video, vote_average, vote_count, videos, credits, similar*/}\r\n                    {/*</div>*/}\r\n\r\n\r\n                    <div className='div-background row mt-5'>\r\n                        <div className='img-content pl-5'>\r\n                            <img src={'https://image.tmdb.org/t/p/w500/' + this.state.details.poster_path}/>\r\n                        </div>\r\n                        <div className='col-lg-8 col-md-10 col-sm-12 ml-2'>\r\n                            <div>\r\n                                <b>\r\n                                {this.state.details.original_title}\r\n                                </b>\r\n                            </div>\r\n                            <div>\r\n                                <b>Score: </b>\r\n                                {this.state.details.vote_average}\r\n                            </div>\r\n                            <div>\r\n                                <b>Overview: </b>\r\n                                {this.state.details.overview}\r\n                            </div>\r\n                            <div>\r\n                                <b>Original Language: </b>{this.state.details.original_language}\r\n                            </div>\r\n                            <div className='col-6'>\r\n                            </div>\r\n                            {\r\n                                this.state.loggedIn === false &&\r\n                                <CriticReview movieId ={this.props.match.params.movieId}\r\n                                              original_title={this.state.details.original_title}/>\r\n                            }\r\n                            {\r\n                                this.state.userType === 'Critic' &&\r\n                                <CriticReview movieId ={this.props.match.params.movieId}\r\n                                              original_title={this.state.details.original_title}/>\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailsPage;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport UserHomeNavbar from \"../components/UserHomeNavbar\";\r\nimport UserServiceClient from \"../services/user.service.client\";\r\nimport CriticServiceClient from \"../services/critic.service.client\";\r\n\r\nexport default class ReviewsByCritic extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            user:'',\r\n            reviews:'',\r\n            editingFlag: false,\r\n            reviewEditedText:''\r\n        }\r\n        this.setUser = this.setUser.bind(this)\r\n        this.setReviews = this.setReviews.bind(this)\r\n        this.reviewEdit =this.reviewEdit.bind(this)\r\n        this.updateReview = this.updateReview.bind(this)\r\n        this.deleteReview = this.deleteReview.bind(this)\r\n        this.toggleToReviewMode = this.toggleToReviewMode.bind(this)\r\n    }\r\n\r\n    setUser(user){\r\n        this.setState({\r\n            user:user\r\n        })\r\n    }\r\n\r\n    setReviews(reviewList){\r\n        console.log(reviewList)\r\n        this.setState({\r\n            reviews:reviewList\r\n        })\r\n    }\r\n\r\n    reviewEdit(txt){\r\n        this.setState({\r\n            reviewEditedText:  txt\r\n        });\r\n    }\r\n\r\n    toggleToReviewMode(reviewText){\r\n        this.setState({\r\n            editingFlag:true,\r\n            reviewEditedText: reviewText\r\n        });\r\n    }\r\n\r\n    updateReview(id,title){\r\n\r\n        if(this.state.reviewEditedText.length > 0) {\r\n            let review = {\r\n                \"_id\":id,\r\n                \"reviewTitle\":title,\r\n                \"reviewText\":this.state.reviewEditedText\r\n            }\r\n            CriticServiceClient.updateCriticReview(review).then(response=>\r\n            {\r\n                if (response.status !== 200) {\r\n                    alert(\"Internal Server Error, Try Again\")\r\n                }\r\n                else {\r\n                    alert(\"Your review is saved!\")\r\n                    this.setState({editingFlag:false})\r\n                   CriticServiceClient.findAllCriticReviewsForUser(this.props.match.params.userId)\r\n                        .then(reviews => this.setReviews(reviews))\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"no text received\")\r\n            this.setState({editingFlag:false})\r\n        }\r\n    }\r\n\r\n    deleteReview(reviewId){\r\n        CriticServiceClient.deleteCriticReview(reviewId).then(response => {\r\n            if (response.status === 200) {\r\n                CriticServiceClient.findAllCriticReviewsForUser(this.state.user._id)\r\n            }\r\n            else {\r\n                alert(\"Could not delete review\")\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        // check user is critic only later\r\n        UserServiceClient.getProfile().then(user => this.setUser(user))\r\n        CriticServiceClient.findAllCriticReviewsForUser(this.props.match.params.userId)\r\n            .then(reviews => this.setReviews(reviews))\r\n    }\r\n    render(){\r\n        let textarea;\r\n        return(\r\n            <div>\r\n                <UserHomeNavbar/>\r\n\r\n\r\n                <ul className=\"list-group m-5\">\r\n                    <Link to={\"/critic/\"+this.state.user._id+\"/critic-home\"}>\r\n                        ....Back\r\n                    </Link>\r\n                    {\r\n                        this.state.reviews && this.state.reviews.map((review,index) =>\r\n                        <li className=\"list-group-item\" key={index}>\r\n                            <div  className=\"font-weight-bold font-italic\">\r\n                                <Link to={`/movie/${review.movieId}`}>\r\n                                    Movie: {review.movieName}\r\n                                    </Link>\r\n                            </div>\r\n                            <div>\r\n                                <h6>Your review</h6>\r\n                                Title: {review.title}\r\n                            </div>\r\n                            <div>Date: {review.createdDate}</div>\r\n                            <div style={{display:this.state.editingFlag?'none':'block'}}>\r\n                                Review: {review.text}\r\n                                <button className=\"m-1 btn btn-sm rounded-circle btn-outline-warning\"\r\n                                        onClick={()=> this.toggleToReviewMode(review.text)}>\r\n                                    <i className=\"fa fa-pencil\"></i>\r\n                                </button>\r\n                                <button className=\"m-1 btn btn-sm rounded-circle btn-outline-danger\"\r\n                                        onClick={()=> this.deleteReview(review._id)}>\r\n                                    <i className=\"fa fa-trash\"></i>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div style={{display:this.state.editingFlag?'block':'none'}}>\r\n                                Review:\r\n                                <textarea className=\"form-control\"\r\n                                    onChange={e => this.reviewEdit(e.target.value)}\r\n                                    value={this.state.reviewEditedText}\r\n                                    ref={node => {textarea = node;}}/>\r\n                                <button className=\"m-1 btn btn-sm rounded-circle btn-outline-success\"\r\n                                        onClick={()=> this.updateReview(review._id,review.title)}>\r\n                                    <i className=\"fa fa-check\"></i>\r\n                                </button>\r\n\r\n                            </div>\r\n\r\n\r\n                            </li>\r\n                        )\r\n                    }\r\n\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {MovieCard} from '../components/MovieCard';\r\n// import Select from '@material-ui/core/Select';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n\r\nclass ExploreMoviesContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.state.movies){\r\n            return (\r\n                <div>\r\n\r\n                    <div className='card-deck'>\r\n                        {this.state.movies.map((movie, index) => {\r\n                            let poster = 'https://image.tmdb.org/t/p/w500' + movie.poster_path;\r\n                            return (\r\n                                <MovieCard key={index}\r\n                                           image={poster}\r\n                                           movie={movie}\r\n                                           favorite={this.state.favorite}\r\n                                           watchlist={this.state.watchlist}\r\n                                           watchListMovie={this.state.watchListMovie}\r\n                                           favouriteMovie={this.state.favoriteMovie}\r\n                                           type={this.state.type}\r\n                                           loggedIn={this.state.loggedIn}\r\n                                           page='explore'/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"ml-4\">\r\n                <h3 >Loading</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ExploreMoviesContainer;","\r\nlet FAN_URL = 'http://desolate-retreat-56126.herokuapp.com/api/';\r\n//let FAN_URL = 'http://localhost:4000/api/';\r\n\r\n\r\n//let FAN_URL = 'http://desolate-retreat-56126.herokuapp.com/api/';\r\n\r\nclass FanServiceClient {\r\n\r\n\r\n    static followFan(fanId,userId) {\r\n        return fetch(FAN_URL+ userId + '/fan/' + fanId, {\r\n            method: 'post',\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    static unfollowFan(fanId,userId) {\r\n        return fetch(FAN_URL + userId+ '/fan/'+fanId, {\r\n            method: 'delete',\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    static findMyFollowers(userId){\r\n        return fetch(FAN_URL + userId+ '/follower', {\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res=>{\r\n            return res.json()\r\n        })\r\n    }\r\n\r\n    static findMyFollowing(userId){\r\n        return fetch(FAN_URL + userId+ '/following', {\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res=>{\r\n            return res.json()\r\n        })\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default FanServiceClient;","import React, {Component} from 'react'\r\nimport UserHomeNavbar from \"../components/UserHomeNavbar\";\r\nimport UserServiceClient from \"../services/user.service.client\";\r\nimport {Link} from \"react-router-dom\";\r\nimport '../styles/fan.explore.container.client.css';\r\nimport FanServiceClient from \"../services/fan.service.client\";\r\n\r\nexport default class FanExploreContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user:'',\r\n            userList:[]\r\n        }\r\n\r\n        this.setUser = this.setUser.bind(this)\r\n        this.setUserList = this.setUserList.bind(this)\r\n        this.setLoginToggle = this.setLoginToggle.bind(this)\r\n        this.followUser = this.followUser.bind(this)\r\n        this.unfollowUser = this.unfollowUser.bind(this)\r\n    }\r\n\r\n    setLoginToggle(flag){\r\n        this.setState({\r\n            loggedIn: flag\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        UserServiceClient.isloggedIn().then(response => {\r\n            if(response.status === 200){\r\n                this.setLoginToggle(true)\r\n                UserServiceClient.getProfile().then(user => this.setUser(user))\r\n            }\r\n            else{\r\n                this.setLoginToggle(false)\r\n            }\r\n        })\r\n\r\n        /* old code, before explore was made available to ALL\r\n        UserServiceClient.getProfile().then(user => {\r\n            this.setUser(user)\r\n        })*/\r\n\r\n        setTimeout(() => {\r\n            UserServiceClient.findAllUsers().then(userList =>  this.setUserList(userList))\r\n        }, 500)\r\n\r\n    }\r\n\r\n    setUser(user){\r\n        this.setState({\r\n            user:user\r\n        })\r\n    }\r\n\r\n    setUserList(listOfUsers){\r\n        this.setState({\r\n            userList: listOfUsers\r\n        })\r\n    }\r\n\r\n    followUser(fanID,userId){\r\n        FanServiceClient.followFan(fanID._id,userId).then(response => console.log(response.status))\r\n        alert(\"followed user: \" + fanID.firstName)\r\n    }\r\n\r\n    unfollowUser(fanID,userId){\r\n        FanServiceClient.unfollowFan(fanID._id,userId).then(response => console.log(response.status))\r\n        alert(\"unfollowed user\" + fanID.firstName)\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div hidden={!this.state.loggedIn}>\r\n                    <UserHomeNavbar/>\r\n                </div>\r\n                <div hidden={this.state.loggedIn}>\r\n                    <nav className=\"navbar navbar-light bg-light\">\r\n\r\n                        <Link to=\"/\" className=\"navbar-brand\">\r\n                            <i className=\"fa fa-video-camera pr-1 text-warning\"></i>\r\n                            PickFlick\r\n                        </Link>\r\n                        <ul className=\"nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/login\" className=\"nav-link text-dark\">\r\n                                    Login\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/register\" className=\"nav-link text-dark\">\r\n                                    Sign up!\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/fan/explore\" className=\"nav-link\">Explore</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n\r\n                <div className=\"mt-2 container\">\r\n                    <div className=\"row\">\r\n                    {\r\n                        this.state.userList && this.state.userList.map((fan,index) => {\r\n                            return <div className=\"col-lg-2 col-md-4 col-sm-12\">\r\n                                <div className=\"card\">\r\n                                    <img className=\"card-img\"\r\n                                         src=\"http://icons.iconarchive.com/icons/graphicloads/100-flat/72/contact-icon.png\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{fan.firstName} {fan.lastName}</h5>\r\n                                        <p className=\"card-text\">\r\n                                            <Link to={`/public/profile/${fan._id}`}>\r\n                                                Profile\r\n                                            </Link>\r\n                                            <div hidden={!this.state.loggedIn}>\r\n                                            <button className=\"btn btn-outline-success\"\r\n                                                    onClick={()=> this.followUser(fan,this.state.user._id)}>\r\n                                                Follow\r\n                                            </button>\r\n                                            <button className=\"btn btn-outline-danger\"\r\n                                                    onClick={()=> this.unfollowFan(fan,this.state.user._id)}>\r\n                                                Unfollow\r\n                                            </button>\r\n                                            </div>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport UserHomeNavbar from \"../components/UserHomeNavbar\";\r\nimport UserServiceClient from \"../services/user.service.client\";\r\nimport '../styles/fan.explore.container.client.css';\r\nimport FanServiceClient from \"../services/fan.service.client\"\r\n\r\nexport default class UserPublicProfile extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user:'',\r\n            reviews:'',\r\n            nFollowers:'',\r\n            nFollowing:''\r\n        };\r\n        this.setUser = this.setUser.bind(this);\r\n        this.setUserList = this.setUserList.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        UserServiceClient.findUserById(this.props.match.params.userId).then(res => {\r\n\r\n\r\n            FanServiceClient.findMyFollowing(this.props.match.params.userId).then(res_1 => {\r\n                FanServiceClient.findMyFollowers(this.props.match.params.userId).then(res_2 => {\r\n                    console.log(\"something\" , res_1)\r\n                    console.log(\"something else\" , res_2)\r\n                    this.setState({\r\n                        nFollowers: res_2 ? res_2.length :0 ,\r\n                        nFollowing: res_1 ? res_1.length :0,\r\n                        user:res\r\n                    })\r\n                })\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    setUser(user){\r\n        console.log(user)\r\n        this.setState({\r\n            user:user\r\n        })\r\n\r\n        if(user.type===\"Critic\"){\r\n\r\n        }\r\n    }\r\n\r\n    setUserList(listOfUsers){\r\n        this.setState({\r\n            userList: listOfUsers\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        console.log(\"renderin\" , this.state)\r\n        return (\r\n            <div>\r\n                <UserHomeNavbar/>\r\n                <ul className=\"list-group m-5\">\r\n\r\n                    <li className=\"list-group-item\">\r\n                        <i className=\"fa fa-user fa-5x\"></i>\r\n                        <div>\r\n                            Name: {this.state.user.firstName} {this.state.user.lastName}\r\n                        </div>\r\n                        <div>\r\n                            Username: {this.state.user.username}\r\n                        </div>\r\n                        <div>\r\n                            Followers: {this.state.nFollowers}\r\n                        </div>\r\n                        <div>\r\n                            Following: {this.state.nFollowing}\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import {Link} from \"react-router-dom\";\r\nimport React, {Component} from \"react\";\r\nimport MovieServiceClient from \"../services/movie.service.client\";\r\nimport UserHomeNavbar from \"./UserHomeNavbar\";\r\n\r\nexport default class Favorites extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user:'',\r\n            favoriteMovies:[]\r\n        };\r\n        this.setUser = this.setUser.bind(this)\r\n        this.setFavoriteMovies = this.setFavoriteMovies.bind(this)\r\n    }\r\n\r\n    setUser(user){\r\n        this.setState({user:user})\r\n    }\r\n\r\n    setFavoriteMovies(movies){\r\n        this.setState({\r\n            favoriteMovies:movies\r\n        })\r\n    }\r\n\r\n    componentWillMount(){\r\n        MovieServiceClient.getFavouriteMovies().then(movies => this.setFavoriteMovies(movies.favourites))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <UserHomeNavbar/>\r\n                <div className=\"container\">\r\n                    <h1> My favorites</h1>\r\n                    <ul className=\"list-group\">\r\n                        {this.state.favoriteMovies && this.state.favoriteMovies.map(movie => {\r\n                            return <li className=\"list-group-item\">\r\n                                <Link to={`/details/${movie.id}`}>\r\n                                    {movie.title}\r\n                                </Link>\r\n                                </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import {Link} from \"react-router-dom\";\r\nimport React, {Component} from \"react\";\r\nimport MovieServiceClient from \"../services/movie.service.client\";\r\nimport UserHomeNavbar from \"./UserHomeNavbar\";\r\n\r\nexport default class WatchlistPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user:'',\r\n            watchList:[]\r\n        };\r\n        this.setUser = this.setUser.bind(this)\r\n        this.setWatchlistMovies = this.setWatchlistMovies.bind(this)\r\n    }\r\n\r\n    setUser(user){\r\n        this.setState({user:user})\r\n    }\r\n\r\n    setWatchlistMovies(movies){\r\n        this.setState({\r\n            watchList:movies\r\n        })\r\n    }\r\n\r\n    componentWillMount(){\r\n        MovieServiceClient.getWatchlistMovies().then(movies => this.setWatchlistMovies(movies.watchList))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <UserHomeNavbar/>\r\n                <div className=\"container\">\r\n                    <h1> My Watchlist</h1>\r\n                    <ul className=\"list-group\">\r\n                        {this.state.watchList && this.state.watchList.map(movie => {\r\n                            return <li className=\"list-group-item\">\r\n                                <Link to={`/details/${movie.id}`}>\r\n                                    {movie.title}\r\n                                </Link>\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport LoginComponent from \"./components/LoginComponent\";\r\nimport Home from \"./containers/Home\";\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport UserHomeContainer from \"./containers/UserHomeContainer\";\r\nimport UserProfile from \"./containers/UserProfile\";\r\nimport CriticHomeContainer from \"./containers/CriticHomeContainer\";\r\nimport RegisterUserContainer from \"./containers/RegisterUserContainer\";\r\nimport AdminContainer from \"./containers/AdminContainer\";\r\nimport SearchResultsPage from \"./components/SearchResultsPage\";\r\nimport CriticReviewContainer from \"./containers/CriticReviewContainer\";\r\nimport DetailsPage from \"./components/DetailsPage\";\r\nimport CriticReview from \"./components/CriticReview\";\r\nimport ReviewsByCritic from \"./components/ReviewsByCritic\";\r\nimport ExploreMoviesContainer from \"./containers/ExploreMoviesContainer\";\r\nimport FanExploreContainer from \"./containers/FanExploreContainer\";\r\nimport UserPublicProfile from \"./components/UserPublicProfile\";\r\nimport Favorites from \"./components/Favorites\";\r\nimport WatchlistPage from \"./components/WatchlistPage\";\r\n\r\nexport default class App extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <div>\r\n                        <Route exact path=\"/\"\r\n                               component={Home} />\r\n                        <Route path=\"/register\"\r\n                               component={RegisterUserContainer}/>\r\n                        <Route path=\"/login\"\r\n                               component={LoginComponent} />\r\n                        <Route path=\"/:userid/home\"\r\n                               component={UserHomeContainer} />\r\n                        <Route path=\"/critic/:userid/critic-home\"\r\n                               component={CriticHomeContainer} />\r\n                        <Route path=\"/profile/:userid\"\r\n                               component={UserProfile} />\r\n                       <Route path=\"/admin/:userId\"\r\n                               component={AdminContainer}/>\r\n                        <Route path=\"/search/:term\"\r\n                               component={SearchResultsPage}/>\r\n                        <Route path=\"/movie/:movieid/review\"\r\n                               component={CriticReviewContainer}/>\r\n                        <Route path=\"/critic/:userId/reviews\"\r\n                               component={ReviewsByCritic}/>\r\n                        <Route path=\"/details/:movieId\"\r\n                               component={DetailsPage}/>\r\n                        <Route exact path='/explore'\r\n                               component={ExploreMoviesContainer}/>\r\n                        <Route path=\"/fan/explore\"\r\n                               component={FanExploreContainer} />\r\n                        <Route path=\"/public/profile/:userId\"\r\n                               component={UserPublicProfile}/>\r\n                        <Route path=\"/favorites/:userid\"\r\n                               component={Favorites} />\r\n                        <Route path=\"/watchlist/:userid\"\r\n                               component={WatchlistPage} />\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\r\nimport '../node_modules/font-awesome/css/font-awesome.css';\r\nimport '../node_modules/jquery/dist/jquery'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport App from \"./app\";\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}